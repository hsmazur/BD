DROP TABLE IF EXISTS dependente;
DROP TABLE IF EXISTS trabalha_em;
DROP TABLE IF EXISTS projeto;
DROP TABLE IF EXISTS localizacao_dep;
DROP TABLE IF EXISTS funcionario;
DROP TABLE IF EXISTS departamento;



CREATE TABLE DEPARTAMENTO (
    Dnome varchar(20),
    Dnumero int,
    Cpf_gerente varchar(20),
    Data_inicio_gerente Date,
    primary key (Dnumero)
);

CREATE TABLE FUNCIONARIO (
    Pnome varchar(20),
    Minicial varchar(20),
    Unome varchar(20),
    Cpf varchar(20),
    Datanasc Date,
    Endereco varchar(50),
    Sexo varchar(1),
    Salario int,
    Cpf_supervisor varchar(20),
    Dnr int,
  
    foreign key (Dnr) REFERENCES DEPARTAMENTO(Dnumero),
    primary key (Cpf)
);

CREATE TABLE LOCALIZACAO_DEP (
    Dlocal varchar(50),
    Dnumero int,
    foreign key (Dnumero) REFERENCES DEPARTAMENTO(Dnumero),
    primary key (Dnumero, Dlocal)
);

CREATE TABLE PROJETO (
   Projnome varchar(20),
   Projnumero int,
   Projlocal varchar(50),
   Dnum int,
   primary key (Projnumero),
   foreign key (Dnum) REFERENCES DEPARTAMENTO(Dnumero)
);

CREATE TABLE TRABALHA_EM (
   Fcpf varchar(20),
   Pnr int,
   Horas int,
   primary key (Fcpf, Pnr),
   foreign key (Pnr) REFERENCES PROJETO(Projnumero)
);

CREATE TABLE DEPENDENTE (
   Fcpf varchar(20),
   Nome_dependente varchar(20),
   Sexo varchar(1),
   Datanasc Date,
   Parentesco varchar(10),
   foreign key (Fcpf) REFERENCES FUNCIONARIO(Cpf),
   primary key (Fcpf, Nome_dependente)
);

INSERT INTO DEPARTAMENTO VALUES
  ('Pesquisa', 5, '33344555587', '1988-05-22'),
  ('Administração', 4, '98765432168', '1995-01-01'),
  ('Matriz', 1, '88866555576', '1981-06-19');

INSERT INTO FUNCIONARIO VALUES
  ('Joao', 'B', 'Silva', '12345678966', '1965-01-09', 'Rua das Flores, 751, São Paulo, SP', 'M', 30000, '33344555587', 5),
  ('Fernando', 'T', 'Wong', '33344555587', '1955-12-09', 'Rua da Lapa, 34, São Paulo, SP', 'M', 40000, '88866555576', 5),
  ('Alice', 'J', 'Zelaya', '99988777767', '1968-01-19', 'Rua Souza Lima, 35, Curitiba, PR', 'F', 25000, '98765432168', 4),
  ('Jennifer', 'S', 'Souza', '98765432168', '1941-06-20', 'Av. Arthur de Lima, 54, Santo André, SP F', 'F', 43000, '88866555576', 4),
  ('Ronaldo', 'K', 'Lime', '66688444476', '1962-09-15', 'Rua Rebouças, 65, Piracicaba, SP', 'M', 38000, '33344555587', 5),
  ('Joice', 'A', 'Leite', '45345345376', '1972-07-31', 'Av. Lucas Obes, 74, São Paulo, SP', 'F', 25000, '33344555587', 5),
  ('André', 'V', 'Pereira', '98798798733', '1969-03-29', 'Rua Timbira, 35, São Paulo, SP', 'M', 25000, '98765432168', 4),
  ('Daniel', 'V', 'Bastos', '1111111133', '1999-10-17', 'Rua Euzébio de Queiros, 418', 'M', 25000, '98765432168', 4),
  ('Jorge', 'E', 'Brito', '88866555576', '1937-11-10', 'Rua do Horto, 35, São Paulo, SP', 'M', 55000, NULL, 1);
  
INSERT INTO LOCALIZACAO_DEP VALUES
   ('São Paulo', 1),
   ('Mauá', 4),
   ('Santo André', 5),
   ('Itu', 5),
   ('São Paulo', 5);
   
INSERT INTO PROJETO VALUES
  ('ProdutoX', 1, 'Santo André', 5),
  ('ProdutoY', 2, 'Itu', 5),
  ('ProdutoZ', 3, 'São Paulo', 5),
  ('Informatização', 10, 'Mauá', 4),
  ('Reorganização', 20, 'São Paulo', 1),
  ('Novosbenefícios', 30, 'Mauá', 4);
  
INSERT INTO TRABALHA_EM VALUES
  ('12345678966', 1, 32.5),
  ('12345678966', 2, 7.5),
  ('12345678966', 3, 32.5),
  ('12345678966', 10, 32.5),
  ('12345678966', 20, 32.5),
  ('12345678966', 30, 32.5),
  ('66688444476', 3, 40),
  ('45345345376', 1, 20),
  ('45345345376', 2, 20),
  ('33344555587', 2, 10),
  ('33344555587', 3, 10),
  ('33344555587', 10, 10),
  ('33344555587', 20, 10),
  ('99988777767', 30, 30),
  ('99988777767', 10, 10),
  ('98798798733', 10, 35),
  ('98798798733', 30, 5),
  ('98765432168', 30, 20),
  ('98765432168', 20, 15),
  ('88866555576', 20, NULL);
  
INSERT INTO DEPENDENTE VALUES
  ('33344555587', 'Alicia', 'F', '1986-04-05', 'Filha'),
  ('33344555587', 'Tiago', 'M', '1983-10-25', 'Filho'),
  ('33344555587', 'Janaína', 'F', '1958-05-03', 'Esposa'),
  ('98765432168', 'Antonio', 'M', '1942-02-28', 'Marido'),
  ('12345678966', 'Michael', 'M', '1988-01-04', 'Filho'),
  ('12345678966', 'Alicia', 'F', '1988-12-30', 'Filha'),
  ('12345678966', 'Elizabeth', 'F', '1967-05-05', 'Esposa');

--15)Utilizando Join ON. Retorne os funcionários e seus respectivos departamentos.
SELECT F.Pnome, F.Unome, D.Dnome
FROM FUNCIONARIO F
JOIN DEPARTAMENTO D ON F.Dnr = D.Dnumero;

--16)Utilizando Join ON. Mostre os nomes de funcionários, seus respectivos nomes de departamentos 
--e os nomes de projetos junto com horas no projeto em que estão envolvidos.
SELECT F.Pnome, F.Unome, D.Dnome, P.Projnome, TE.Horas
FROM FUNCIONARIO F
JOIN DEPARTAMENTO D ON F.Dnr = D.Dnumero
JOIN TRABALHA_EM TE ON F.Cpf = TE.Fcpf
JOIN PROJETO P ON TE.Pnr = P.Projnumero;

--17)Utilizando Join ON. Recupere os nomes de todos os funcionários no departamento 5 que
--trabalham mais de 10 horas por semana no projeto ProdutoX.
SELECT F.Pnome, F.Unome
FROM FUNCIONARIO F
JOIN DEPARTAMENTO D ON F.Dnr = D.Dnumero
JOIN TRABALHA_EM TE ON F.Cpf = TE.Fcpf
JOIN PROJETO P ON TE.Pnr = P.Projnumero
WHERE D.Dnumero = 5 AND TE.Horas > 10 AND P.Projnome = 'ProdutoX';

--18) Utilizando Join ON. Ache os nomes de todos os funcionários que são supervisionados
--diretamente por ’Fernando Wong’.
SELECT F.Pnome, F.Unome
FROM FUNCIONARIO F
JOIN FUNCIONARIO S ON F.Cpf_supervisor = S.cpf
WHERE S.Pnome = 'Fernando' AND S.Unome = 'Wong';

--19)Mostre o nome dos funcionários junto com o nome do seu supervisor, inclua funcionários
--sem superevisor por meio de junção externa.
SELECT F.Pnome || ' ' || F.Unome || ' - ' || S.Pnome || ' ' || S.Unome AS FuncionarioESupervisor
FROM FUNCIONARIO F
LEFT OUTER JOIN FUNCIONARIO S ON F.Cpf_supervisor = S.Cpf;

--20)Consulta que retorna o nome completo e o salário de todos os funcionários juntamente
--com o nome do departamento em que eles trabalham:
SELECT F.Pnome, F.Unome, F.Salario, D.Dnome
FROM FUNCIONARIO F
JOIN DEPARTAMENTO D ON F.Dnr = D.Dnumero;

--21)Consulta que retorna o nome do funcionário, o nome do dependente e o parentesco dos
--dependentes de cada funcionário:
SELECT F.Pnome, F.Unome, D.Nome_Dependente, D.Parentesco
FROM FUNCIONARIO F
LEFT OUTER JOIN DEPENDENTE D ON F.Cpf = D.Fcpf;

--22)Liste todos os funcionários com seus respectivos projetos (se houver). Mostre também os
--funcionários que não trabalham em nenhum projeto.
SELECT F.Pnome, F.Unome, P.Projnome
FROM FUNCIONARIO F
LEFT OUTER JOIN TRABALHA_EM TE ON F.Cpf = TE.Fcpf
JOIN PROJETO P ON TE.Pnr = P.Projnumero;

--23)Liste todos os projetos e os departamentos associados, se existirem. Inclua também os
--projetos sem departamento e departamentos sem projetos.
SELECT P.Projnome, D.Dnome
FROM PROJETO P
FULL OUTER JOIN DEPARTAMENTO D ON P.Dnum = D.Dnumero;

--24)Liste todas as localizações dos departamentos, mesmo que o departamento ainda não tenha sido
--registrado na tabela DEPARTAMENTO. Exiba também os departamentos existentes para cada localização.
SELECT LD.Dlocal, D.Dnome
FROM LOCALIZACAO_DEP LD
LEFT OUTER JOIN DEPARTAMENTO D ON LD.Dnumero = D.Dnumero;

--25)Mostre a soma dos salários de todos os funcionários, o salário máximo, o salário mínimo
--e a média dos salários.
SELECT 
SUM(Salario) AS SomaSalarios,
MAX(Salario) AS SalarioMaximo,
MIN(Salario) AS SalarioMinimo,
AVG(Salario) AS MediaSalarios
FROM FUNCIONARIO;

--26)Mostre a quantidade de projetos.
SELECT COUNT(*)
FROM PROJETO;

--27)Mostre a quantidade de funcionários da empresa.
SELECT COUNT(*)
FROM FUNCIONARIO;

--28)Mostre a quantidade de funcionários que trabalham em algum projeto, contando cada
--funcionário apenas uma vez.
SELECT P.Projnome, COUNT(T.Fcpf)
FROM PROJETO P
JOIN TRABALHA_EM T ON P.Projnumero = T.Pnr
GROUP BY Projnome;

--29)Achar a soma dos salários de todos os funcionários com mais de 60 anos do departamento
--“Administração”, bem como o salário máximo, o salário mínimo e a média dos salários entre estes.
SELECT 
SUM(F.Salario) AS SomaSalarios,
MAX(F.Salario) AS SalarioMaximo,
MIN(F.Salario) AS SalarioMinimo,
AVG(F.Salario) AS MediaSalarios
FROM FUNCIONARIO F
JOIN DEPARTAMENTO D ON F.Dnr = D.Dnumero
WHERE Dnome = 'Administração' AND EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM Datanasc) > 60;

--30)Para cada departamento, mostre o nome do departamento, o número de funcionários no
--departamento e seu salário médio.
SELECT D.Dnome, COUNT(F.Cpf),  AVG(F.Salario)
FROM DEPARTAMENTO D
JOIN FUNCIONARIO F ON D.Dnumero = F.Dnr
GROUP BY D.Dnome;

--31)Para cada departamento, mostre o nome do departamento, o número do departamento
--o número de funcionários no departamento e seu salário médio. Ordene pela média de salario.
SELECT D.Dnome, D.Dnumero, COUNT(F.Cpf),  AVG(F.Salario) AS MediaSalarios
FROM DEPARTAMENTO D
JOIN FUNCIONARIO F ON D.Dnumero = F.Dnr
GROUP BY D.Dnumero
ORDER BY MediaSalarios;

--32)Para cada projeto onde três ou funcionários trabalham, mostre o número e o nome do projeto, 
--o número de funcionários que trabalham no projeto e a média de horas trabalhadas no projeto.
SELECT P.Projnumero, P.Projnome, COUNT(T.Fcpf), AVG(T.Horas)
FROM PROJETO P
JOIN TRABALHA_EM T ON P.Projnumero = T.Pnr
GROUP BY P.Projnumero, P.Projnome
HAVING COUNT(T.Fcpf) >= 3;

--33)Mostre os funcionários que possuem dependente(s). Utilize o operador exists.
SELECT F.Pnome, F.Unome
FROM FUNCIONARIO F
WHERE EXISTS (
	SELECT * FROM DEPENDENTE D
	WHERE F.Cpf = D.Fcpf
);

--34)Mostre os projetos que não têm funcionário(s) trabalhando neles.
SELECT P.Projnome
FROM PROJETO P
WHERE NOT EXISTS (
	SELECT * FROM FUNCIONARIO F
	WHERE P.Dnum = F.Dnr
);

--35)Mostre os funcionários cujo departamento está localizado em (’São Paulo’,’Mauá’ ou ’Itu’)
SELECT Pnome, Unome
FROM FUNCIONARIO 
WHERE Dnr IN (
	SELECT Dnumero FROM LOCALIZACAO_DEP 
	WHERE Dlocal IN ('São Paulo', 'Mauá', 'Itu')
);

--36)Mostre os nomes dos funcionários cujo salário é maior do que o salário de todos os funcionários no departamento ’Administração’.
SELECT F.Pnome, F.Unome
FROM FUNCIONARIO F
WHERE F.Salario > ALL (
	SELECT F.Salario FROM FUNCIONARIO F
	JOIN DEPARTAMENTO D ON F.Dnr = D.Dnumero
	WHERE D.Dnome = 'Administração'
);

--37)Liste os nomes dos gerentes de departamento que não possuem dependentes.
SELECT F.Pnome, F.Unome
FROM FUNCIONARIO F
JOIN DEPARTAMENTO D ON F.Cpf = D.Cpf_gerente
WHERE NOT EXISTS (
	SELECT * FROM DEPENDENTE DP
	WHERE D.Cpf_gerente = DP.Fcpf
);

